{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsLocation": {
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "Artifacts location"
      },
      "defaultValue": "[uri(deployment().properties.templateLink.uri, '.')]",
      "type": "string"
    },
    "artifactsLocationSasToken": {
      "metadata": {
        "description": "Artifacts Sas token"
      },
      "defaultValue": "",
      "type": "string"
    },
    "adminPassword": {
      "metadata": {
        "description": "Password for the Virtual Machine. Will be used only if authenticationType is 'password'"
      },
      "defaultValue": "",
      "type": "securestring"
    },
    "adminSSHPublicKey": {
      "metadata": {
        "description": "Public SSH key for the Virtual Machine. Will be used only if authenticationType is 'sshPublicKey'"
      },
      "defaultValue": "",
      "type": "string"
    },
    "adminUserName": {
      "metadata": {
        "description": "User name for the Virtual Machine"
      },
      "type": "string"
    },
    "authenticationType": {
      "metadata": {
        "description": "Authentication type (can be 'password' or 'sshPublicKey')"
      },
      "type": "string"
    },
    "dnsPrefix": {
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Jenkins Virtual Machine."
      },
      "type": "string"
    },
    "enableCloudAgents":{
      "defaultValue": "aci",
      "metadata": {
        "description": "Whether add a default cloud template for agents"
      },
      "type": "string"
    },
    "jenkinsReleaseType": {
      "metadata": {
        "description": "Jenkins release type (LTS or weekly or verified)"
      },
      "type": "string",
      "defaultValue": "LTS"
    },
    "jdkType": {
      "metadata": {
        "description": "JDK type (zulu or openjdk)"
      },
      "type": "string",
      "defaultValue": "zulu"
    },
    "location": {
      "metadata": {
        "description": "Azure location where to deploy the resources"
      },
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "publicIPName": {
      "metadata": {
        "description": "Public IP name"
      },
      "type": "string",
      "defaultValue": "jenkins-pip"
    },
    "publicIPNewOrExisting": {
      "metadata": {
        "description": "Should be 'new' if the public IP has to be created"
      },
      "type": "string",
      "defaultValue": "new"
    },
    "publicIPResourceGroup": {
      "metadata": {
        "description": "The Public IP Resource Group"
      },
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "storageAccountType": {
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account Type"
      },
      "type": "string"
    },
    "spId":{
      "defaultValue": "",
      "metadata": {
        "description": "The Service Principal Id"
      },
      "type": "string"
    },
    "spSecret":{
      "defaultValue": "",
      "metadata": {
        "description": "The Service Principal secret"
      },
      "type": "string"
    },
    "spType":{
      "defaultValue": "msi",
      "metadata": {
        "description": "The type of service principal injected into Jenkins (can be 'msi' or 'manual')."
      },
      "type": "string"
    },
    "vmName": {
      "metadata": {
        "description": "Virtual Machine Name (also used as a prefix for other resources)"
      },
      "type": "string",
      "defaultValue": "jenkins"
    },
    "vmSize": {
      "metadata": {
        "description": "Virtual Machine Size"
      },
      "type": "string",
      "defaultValue": "Standard_DS1_v2"
    },
    "vnetNewOrExisting": {
      "metadata": {
        "description": "Use new or existing VNET"
      },
      "type": "string",
      "defaultValue": "new"
    },
    "vnetResourceGroup": {
      "metadata": {
        "description": "Name of resource group of the VNET"
      },
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "vnetName": {
      "metadata": {
        "description": "Name of the Virtual Network (VNET)"
      },
      "type": "string",
      "defaultValue": "jenkins-vnet"
    },
    "vnetAddressPrefix": {
      "metadata": {
        "description": "Virtual network address CIDR"
      },
      "type": "string",
      "defaultValue": "172.16.0.0/16"
    },
    "subnetName": {
      "metadata": {
        "description": "Name of the subnet"
      },
      "type": "string",
      "defaultValue": "jenkins"
    },
    "subnetAddressPrefix": {
      "metadata": {
        "description": "subnet CIDR"
      },
      "type": "string",
      "defaultValue": "172.16.0.0/24"
    }
  },
  "variables": {
    "_extensionScript": "install_jenkins.sh",
    "frontEndNSGName": "[concat(parameters('vmName'), '-nsg')]",
    "nicName": "[concat(parameters('vmName'), '-nic')]",
    "publicIPDeploymentName": "[concat(parameters('vmName'), '-pip-deploy')]",
    "templateUrlIP": "[concat(parameters('artifactsLocation'),'/publicIP-',parameters('publicIPNewOrExisting'),'.json',parameters('artifactsLocationSasToken'))]",
    "templateUrlVnet": "[concat(parameters('artifactsLocation'),'/vnet-',parameters('vnetNewOrExisting'),'.json',parameters('artifactsLocationSasToken'))]",
    "templateUrlVM": "[concat(parameters('artifactsLocation'),'/VM-',parameters('authenticationType'),'.json',parameters('artifactsLocationSasToken'))]",
    "ubuntuSku": "16.04-LTS",
    "vmDeploymentName": "[concat(parameters('vmName'), '-vm-deploy')]",
    "vnetDeployName": "[concat(parameters('vmName'), '-vnet-deploy')]"
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "pid-f41ad7f4-2f38-5b1b-bfe7-d8bdaa880a68",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "name": "[variables('publicIPDeploymentName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "publicIPName": {
            "value": "[parameters('publicIPName')]"
          },
          "publicIPLocation": {
            "value": "[parameters('location')]"
          },
          "dnsPrefix": {
            "value": "[parameters('dnsPrefix')]"
          },
          "publicIPResourceGroup": {
            "value": "[parameters('publicIPResourceGroup')]"
          }
        },
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[variables('templateUrlIP')]"
        }
      },
      "type": "Microsoft.Resources/deployments"
    },
    {
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "name": "[variables('vnetDeployName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "subnetAddressPrefix": {
            "value": "[parameters('subnetAddressPrefix')]"
          }
        },
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[variables('templateUrlVnet')]"
        }
      },
      "type": "Microsoft.Resources/deployments"
    },
    {
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "name": "[variables('frontEndNSGName')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh-rule",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "direction": "Inbound",
              "priority": 100,
              "protocol": "Tcp",
              "sourceAddressPrefix": "Internet",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "http-rule",
            "properties": {
              "access": "Allow",
              "description": "Allow HTTP",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80",
              "direction": "Inbound",
              "priority": 101,
              "protocol": "Tcp",
              "sourceAddressPrefix": "Internet",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "jnlp-rule",
            "properties": {
              "access": "Allow",
              "description": "Allow JNLP",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "5378",
              "direction": "Inbound",
              "priority": 110,
              "protocol": "Tcp",
              "sourceAddressPrefix": "Internet",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "tags": {
        "displayName": "NSG - Front End"
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('frontEndNSGName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('vnetDeployName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('publicIPDeploymentName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[variables('nicName')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId(parameters('publicIPResourceGroup'),'Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
              },
              "subnet": {
                "id": "[concat(resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName')),'/subnets/',parameters('subnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('frontEndNSGName'))]"
        }
      },
      "tags": {
        "displayName": "[variables('nicName')]"
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('publicIPDeploymentName'))]"
      ],
      "name": "[variables('vmDeploymentName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminSSHPublicKey": {
            "value": "[parameters('adminSSHPublicKey')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "networkInterfaceId": {
            "value": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "ubuntuSku": {
            "value": "[variables('ubuntuSku')]"
          },
          "vmLocation": {
            "value": "[parameters('location')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          }
        },
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[variables('templateUrlVM')]"
        }
      },
      "type": "Microsoft.Resources/deployments"
    },
    {
      "name": "[guid(resourceGroup().id, deployment().name)]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2017-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('vmDeploymentName'))]"
      ],
      "condition": "[equals(parameters('spType'), 'msi')]",
      "properties": {
        "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "principalId": "[reference(variables('vmDeploymentName')).outputs.identity.value.principalId]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/ManagedIdentityExtensionForLinux')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('vmDeploymentName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.ManagedIdentity",
        "type": "ManagedIdentityExtensionForLinux",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": { }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('vmDeploymentName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat(parameters('vmName'), '/Init')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat('./', variables('_extensionScript'), ' -ca \"', parameters('enableCloudAgents'), '\" -jf \"', reference(variables('publicIPDeploymentName')).outputs.fqdn.value, '\" -jrt \"', parameters('jenkinsReleaseType'), '\" -jt \"', parameters('jdkType'), '\" -lo \"', parameters('location'), '\" -rg \"', resourceGroup().name, '\" -sp \"', parameters('spType'), '\" -spid \"', parameters('spId'), '\" -ss \"', parameters('spSecret'), '\" -subid \"', subscription().subscriptionId, '\" -tid \"', subscription().tenantId, '\" -al \"', parameters('artifactsLocation'), '\" -st \"', parameters('artifactsLocationSasToken'), '\"' )]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {
          "fileUris": [
            "[concat(parameters('artifactsLocation'), '/scripts/', variables('_extensionScript'), parameters('artifactsLocationSasToken'))]"
          ]
        },
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "jenkinsURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPDeploymentName')).outputs.fqdn.value)]"
    },
    "ssh": {
      "type": "string",
      "value": "[concat('ssh -L 8080:localhost:8080 ', parameters('adminUsername'), '@', reference(variables('publicIPDeploymentName')).outputs.fqdn.value)]"
    }
  }
}